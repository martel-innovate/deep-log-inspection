# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# see kafka.server.KafkaConfig for additional details and defaults

############################# Server Basics #############################

# The id of the broker. This must be set to a unique integer for each broker.
broker.id={{ KAFKA_BROKER_ID | default(-1) }}
auto.leader.rebalance.enable=true

# Replication
auto.create.topics.enable={{ KAFKA_AUTO_CREATE_TOPICS | default('true') }}
default.replication.factor=1

# Hostname the broker will advertise to consumers. If not set, kafka will use the value returned
# from InetAddress.getLocalHost().  If there are multiple interfaces getLocalHost
# may not be what you want.
advertised.host.name={{ KAFKA_ADVERTISED_HOST_NAME }}

# Enable topic deletion
delete.topic.enable={{ KAFKA_DELETE_TOPIC_ENABLE | default('false') }}

############################# Socket Server Settings #############################

# The port the socket server listens on
port={{ KAFKA_LISTEN_PORT }}
advertised.port={{ KAFKA_ADVERTISED_PORT | default(KAFKA_LISTEN_PORT) }}

# The number of threads handling network requests
num.network.threads=2

# The number of threads doing disk I/O
num.io.threads=2

# The send buffer (SO_SNDBUF) used by the socket server
socket.send.buffer.bytes=1048576

# The receive buffer (SO_RCVBUF) used by the socket server
socket.receive.buffer.bytes=1048576

# The maximum size of a request that the socket server will accept (protection against OOM)
socket.request.max.bytes=104857600

############################# Log Basics #############################

# The directory under which to store log files
log.dir=/data/log
log.dirs=/data/log

# The number of logical partitions per topic per server. More partitions allow greater parallelism
# for consumption, but also mean more files.
num.partitions=1

############################# Log Retention Policy #############################

# The following configurations control the disposal of log segments. The policy can
# be set to delete segments after a period of time, or after a given size has accumulated.
# A segment will be deleted whenever *either* of these criteria are met. Deletion always happens
# from the end of the log.

# The minimum age of a log file to be eligible for deletion
log.retention.hours=4

# The interval at which log segments are checked to see if they can be deleted according
# to the retention policies
log.retention.check.interval.ms=60000

# By default the log cleaner is disabled and the log retention policy will default to just delete segments after their retention expires.
# If log.cleaner.enable=true is set the cleaner will be enabled and individual logs can then be marked for log compaction.
log.cleaner.enable=false

############################# Zookeeper #############################

# Zk connection string (see zk docs for details).
# This is a comma separated host:port pairs, each corresponding to a zk
# server. e.g. "127.0.0.1:3000,127.0.0.1:3001,127.0.0.1:3002".
# You can also append an optional chroot string to the urls to specify the
# root directory for all kafka znodes.
zookeeper.connect={{ ZOOKEEPER_CONNECTION_STRING }}{{ ZOOKEEPER_CHROOT }}
zookeeper.connection.timeout.ms={{ ZOOKEEPER_CONNECTION_TIMEOUT_MS | default(10000) }}
zookeeper.session.timeout.ms={{ ZOOKEEPER_SESSION_TIMEOUT_MS | default(10000) }}

############################# Additional Broker Settings #######################
controlled.shutdown.enable={{ KAFKA_CONTROLLED_SHUTDOWN_ENABLE | default('true') }}
group.max.session.timeout.ms={{ KAFKA_GROUP_MAX_SESSION_TIMEOUT_MS | default(300000) }}

# vim:set filetype=jproperties
